@inherits LayoutComponentBase
@inject BlazorMock.Services.LayoutState Layout
@inject IJSRuntime JS

<div class="min-h-screen ">
    <!-- Top Nav -->
    <header class="py-6">
        <div class="max-w-6xl mx-auto px-4">
            <nav class="bg-black/85 text-white rounded-2xl px-4 md:py-6 py-4 shadow-md">
                <!-- Top row: centered brand on mobile, menu button on right, desktop horizontal -->
                <div class="flex items-center justify-between">
                    <!-- Brand (centered on mobile via flex-1, normal on desktop) -->
                    <a href="/"
                        class="flex items-center gap-2 md:flex-initial flex-1 md:justify-start justify-center md:order-1 order-2">
                        <img src="https://cdn.simpleicons.org/blazor/512BD4" alt="Blazor"
                            class="h-8 w-8 sm:h-8 sm:w-8 flex-shrink-0" />
                        <span class="text-sm sm:text-base font-semibold tracking-wide break-words">Learn Blazor</span>
                    </a>

                    <!-- Hamburger button (mobile only, appears on left side via order) -->
                    <button type="button" @onclick="ToggleMobileMenu"
                        class="md:hidden inline-flex items-center justify-center h-10 w-10 rounded-lg hover:bg-white/10 focus:outline-none focus:ring-2 focus:ring-white/30 order-1 transition-transform duration-200 @(isMobileMenuOpen ? "rotate-90" : "")"
                        aria-label="Toggle navigation" aria-expanded="@isMobileMenuOpen">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
                            class="h-6 w-6 transition-all duration-300">
                            @if (isMobileMenuOpen)
                            {
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M6 18L18 6M6 6l12 12" />
                            }
                            else
                            {
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M4 6h16M4 12h16M4 18h16" />
                            }
                        </svg>
                    </button>

                    <!-- Desktop nav links -->
                    <ul
                        class="hidden md:flex items-center justify-center gap-4 lg:gap-6 text-sm text-gray-200 order-2 absolute left-1/2 -translate-x-1/2">
                        <li>
                            <NavLink href="/guide" class="hover:text-white transition-colors"
                                ActiveClass="text-white font-semibold underline underline-offset-4">Guide</NavLink>
                        </li>
                        <li>
                            <NavLink href="/tips" class="hover:text-white transition-colors"
                                ActiveClass="text-white font-semibold underline underline-offset-4">Tips</NavLink>
                        </li>
                        <li>
                            <NavLink href="/drivers" class="hover:text-white transition-colors"
                                ActiveClass="text-white font-semibold underline underline-offset-4">Drivers</NavLink>
                        </li>
                        <li>
                            <NavLink href="/trucks" class="hover:text-white transition-colors"
                                ActiveClass="text-white font-semibold underline underline-offset-4">Trucks</NavLink>
                        </li>
                        <li>
                            <NavLink href="/routes" class="hover:text-white transition-colors"
                                ActiveClass="text-white font-semibold underline underline-offset-4">Routes</NavLink>
                        </li>
                        <li>
                            <NavLink href="/progress" class="hover:text-white transition-colors"
                                ActiveClass="text-white font-semibold underline underline-offset-4">Progress</NavLink>
                        </li>
                    </ul>

                    <!-- Spacer for mobile to keep logo centered -->
                    <div class="md:hidden w-10 order-3"></div>
                </div>

                <!-- Mobile menu (collapsible with animation) -->
                <div
                    class="md:hidden overflow-hidden transition-all duration-300 ease-in-out @(isMobileMenuOpen ? "max-h-96 opacity-100" : "max-h-0 opacity-0")">
                    <div class="mt-3 border-t border-white/10 pt-3">
                        <nav class="flex flex-col gap-1">
                            <NavLink href="/"
                                class="px-3 py-2 text-sm sm:text-base rounded-lg hover:bg-white/10 transition-colors"
                                ActiveClass="bg-white/10 text-white font-semibold" @onclick="CloseMobileMenu">Dashboard
                            </NavLink>
                            <NavLink href="/tips"
                                class="px-3 py-2 text-sm sm:text-base rounded-lg hover:bg-white/10 transition-colors"
                                ActiveClass="bg-white/10 text-white font-semibold" @onclick="CloseMobileMenu">Tips
                            </NavLink>
                            <NavLink href="/drivers"
                                class="px-3 py-2 text-sm sm:text-base rounded-lg hover:bg-white/10 transition-colors"
                                ActiveClass="bg-white/10 text-white font-semibold" @onclick="CloseMobileMenu">Drivers
                            </NavLink>
                            <NavLink href="/trucks"
                                class="px-3 py-2 text-sm sm:text-base rounded-lg hover:bg-white/10 transition-colors"
                                ActiveClass="bg-white/10 text-white font-semibold" @onclick="CloseMobileMenu">Trucks
                            </NavLink>
                            <NavLink href="/routes"
                                class="px-3 py-2 text-sm sm:text-base rounded-lg hover:bg-white/10 transition-colors"
                                ActiveClass="bg-white/10 text-white font-semibold" @onclick="CloseMobileMenu">Routes
                            </NavLink>
                            <NavLink href="/drivers"
                                class="px-3 py-2 text-sm sm:text-base rounded-lg hover:bg-white/10 transition-colors"
                                ActiveClass="bg-white/10 text-white font-semibold" @onclick="CloseMobileMenu">Drivers
                            </NavLink>
                            <NavLink href="/trucks"
                                class="px-3 py-2 text-sm sm:text-base rounded-lg hover:bg-white/10 transition-colors"
                                ActiveClass="bg-white/10 text-white font-semibold" @onclick="CloseMobileMenu">Trucks
                            </NavLink>

                        </nav>
                    </div>
                </div>
            </nav>
        </div>
    </header>

    <!-- Page Header (outside inner container) -->
    <div class="max-w-6xl mx-auto px-4">
        @Layout.Header
    </div>

    <!-- Content Container -->
    <main class="max-w-6xl  mx-auto px-4 pb-12">
        <div class="bg-white rounded-4xl  p-6">
            @Body
        </div>
    </main>
</div>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool isMobileMenuOpen;
    private IJSObjectReference? _codeModule;


    private void ToggleMobileMenu()
    {
        isMobileMenuOpen = !isMobileMenuOpen;
    }

    private void CloseMobileMenu()
    {
        isMobileMenuOpen = false;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Load code block enhancer and run once per page load
            try
            {
                _codeModule = await JS.InvokeAsync<IJSObjectReference>("import", "/js/codeblocks.js");
                await _codeModule.InvokeVoidAsync("enhancePreBlocks");
            }
            catch { /* no-op if module missing */ }
        }
    }


}