@page "/driver-form"
@using Microsoft.AspNetCore.Components.Forms

<div class="max-w-3xl mx-auto px-4">
    <h1 class="text-xl sm:text-2xl font-semibold mb-4 break-words">Step 4 — Driver Form (Validation)</h1>

    <EditForm Model="driver" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary class="mb-4 text-xs sm:text-sm text-red-600" />

        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
            <div>
                <label class="block text-xs sm:text-sm font-medium text-gray-700 mb-1 break-words">First Name</label>
                <InputText class="mt-1 w-full rounded-lg border border-gray-300 p-2 text-sm sm:text-base" @bind-Value="driver.FirstName" />
                <ValidationMessage For="() => driver.FirstName" class="text-xs text-red-600 mt-1" />
            </div>
            <div>
                <label class="block text-xs sm:text-sm font-medium text-gray-700 mb-1 break-words">Last Name</label>
                <InputText class="mt-1 w-full rounded-lg border border-gray-300 p-2 text-sm sm:text-base" @bind-Value="driver.LastName" />
                <ValidationMessage For="() => driver.LastName" class="text-xs text-red-600 mt-1" />
            </div>
            <div>
                <label class="block text-xs sm:text-sm font-medium text-gray-700 mb-1 break-words">Email</label>
                <InputText type="email" class="mt-1 w-full rounded-lg border border-gray-300 p-2 text-sm sm:text-base" @bind-Value="driver.Email" />
                <ValidationMessage For="() => driver.Email" class="text-xs text-red-600 mt-1" />
            </div>
            <div>
                <label class="block text-xs sm:text-sm font-medium text-gray-700 mb-1 break-words">CDL Number</label>
                <InputText class="mt-1 w-full rounded-lg border border-gray-300 p-2 text-sm sm:text-base" @bind-Value="driver.CdlNumber" />
                <ValidationMessage For="() => driver.CdlNumber" class="text-xs text-red-600 mt-1" />
            </div>
            <div>
                <label class="block text-xs sm:text-sm font-medium text-gray-700 mb-1 break-words">Years Experience</label>
                <InputNumber class="mt-1 w-full rounded-lg border border-gray-300 p-2 text-sm sm:text-base" @bind-Value="driver.YearsExperience" />
                <ValidationMessage For="() => driver.YearsExperience" class="text-xs text-red-600 mt-1" />
            </div>
        </div>

        <div class="mt-6 flex flex-wrap items-center gap-3">
            <button type="submit" class="px-4 py-2 text-sm sm:text-base rounded-lg bg-black text-white hover:opacity-90">Submit</button>
            <button type="button" class="px-4 py-2 text-sm sm:text-base rounded-lg border border-gray-300 hover:bg-gray-50" @onclick="Reset">Reset</button>
        </div>
    </EditForm>

    @if (submitted)
    {
        <div class="mt-6 rounded-xl border border-green-200 p-4 bg-green-50 text-green-900">
            <div class="text-sm sm:text-base font-medium mb-2 break-words">Submitted Driver</div>
            <div class="text-sm break-words">@driver.FirstName @driver.LastName</div>
            <div class="text-sm break-words">@driver.Email</div>
            <div class="text-sm break-words">CDL: @driver.CdlNumber • @driver.YearsExperience years</div>
        </div>
    }
</div>

@code {
    private bool submitted;

    private Driver driver = new();

    private void HandleValidSubmit()
    {
        submitted = true;
    }

    private void Reset()
    {
        driver = new();
        submitted = false;
    }

    public class Driver
    {
        [Required]
        [StringLength(50)]
        public string FirstName { get; set; } = string.Empty;

        [Required]
        [StringLength(50)]
        public string LastName { get; set; } = string.Empty;

        [Required]
        [EmailAddress]
        public string Email { get; set; } = string.Empty;

        [Required]
        [StringLength(20, MinimumLength = 4)]
        public string CdlNumber { get; set; } = string.Empty;

        [Range(0, 60)]
        public int? YearsExperience { get; set; }
    }
}
